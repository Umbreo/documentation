{
    "docs": [
        {
            "location": "/", 
            "text": "What does Umbreo do?\n\n\n\nUmbreo is a cloud-based platform that gives companies, developers \n startups the power to easily and quickly build world-class IT infrastructure.\n\n\nWe go beyond traditional configuration management tools by providing \nconfiguration management as a service\n.\n\n\nWe achieve this by combining best-of-breed technologies that give system administrators and developers the ultimate control, insight and automation possibilities necessary to build an agile, scalable and secure IT infrastructure quickly and easily.\n\n\nUmbreo was specifically created to address the main issues that traditional configuration management tools can present, since they can be error prone, hard to maintain and can quickly become the problem instead of the solution.\n\n\nUmbreo provides a unique service that gives our users unmatched control and simplicity through a powerful and intuitive cloud platform, which enables them to focus more on what\ns really important, which is delivering value to their customers.", 
            "title": "Documentation"
        }, 
        {
            "location": "/#what-does-umbreo-do", 
            "text": "Umbreo is a cloud-based platform that gives companies, developers   startups the power to easily and quickly build world-class IT infrastructure.  We go beyond traditional configuration management tools by providing  configuration management as a service .  We achieve this by combining best-of-breed technologies that give system administrators and developers the ultimate control, insight and automation possibilities necessary to build an agile, scalable and secure IT infrastructure quickly and easily.  Umbreo was specifically created to address the main issues that traditional configuration management tools can present, since they can be error prone, hard to maintain and can quickly become the problem instead of the solution.  Umbreo provides a unique service that gives our users unmatched control and simplicity through a powerful and intuitive cloud platform, which enables them to focus more on what s really important, which is delivering value to their customers.", 
            "title": "What does Umbreo do?"
        }, 
        {
            "location": "/getting-started/launch-first-instance/", 
            "text": "The tutorial assumes that you have already created an account and you\nre logged in to the Umbreo Dashboard.\n\n\nAlso for demonstration purposes we\nll be deploying the Jenkins CI blueprint, but Umbreo has more than a dozen handcrafted,ready to use \nBlueprints\n so you can quickly and easily get started in \n3 easy steps\n.\n\n\n\n\n1. Select a Blueprint\n\n\nFirst, make sure you\nre on the \nBlueprints\n page.\n\n\nSince we\nll be deploy and take \nJenkins CI Server\n as an example, Click on the \nDeploy\n button on Jenkins CI Server blueprint card.\n\n\n\n\n\n\n\n\n\n\n2. Describe your Instance\n\n\nGive a name to your new instance.\n\n\n\n\n\n\n    \n\n\n3. Configure your Instance\n\n\nOnce you are on the instance\ns page, you can configure directly your \nJenkins Server\n  with the parameters you need.\n\n\n\n\n\n\n\n\n4. Choose a Service (optional)\n\n\nIf you want to integrate a service like monitoring or logging, you can consider this section.\n\n\n\n\n\n\n\n\n5. Type of instance\n\n\nChoose the type of your instance, it\ns recommended to start with Manually Provisioned instance or Umbreo online instance to start.\n\n\n\n\n\n\n6. Confirming your instance\n\n\nCopy the cURL command to your clipboard and run it on your server.\n\n\n\n\n\n\nThe command will connect your server first to the Umbreo Platform, then securely configure it with the Blueprint you chose in previous steps.", 
            "title": "Launch your first instance"
        }, 
        {
            "location": "/getting-started/launch-first-instance/#1-select-a-blueprint", 
            "text": "First, make sure you re on the  Blueprints  page.  Since we ll be deploy and take  Jenkins CI Server  as an example, Click on the  Deploy  button on Jenkins CI Server blueprint card.", 
            "title": "1. Select a Blueprint"
        }, 
        {
            "location": "/getting-started/launch-first-instance/#2-describe-your-instance", 
            "text": "Give a name to your new instance.", 
            "title": "2. Describe your Instance"
        }, 
        {
            "location": "/getting-started/launch-first-instance/#3-configure-your-instance", 
            "text": "Once you are on the instance s page, you can configure directly your  Jenkins Server   with the parameters you need.", 
            "title": "3. Configure your Instance"
        }, 
        {
            "location": "/getting-started/launch-first-instance/#4-choose-a-service-optional", 
            "text": "If you want to integrate a service like monitoring or logging, you can consider this section.", 
            "title": "4. Choose a Service (optional)"
        }, 
        {
            "location": "/getting-started/launch-first-instance/#5-type-of-instance", 
            "text": "Choose the type of your instance, it s recommended to start with Manually Provisioned instance or Umbreo online instance to start.", 
            "title": "5. Type of instance"
        }, 
        {
            "location": "/getting-started/launch-first-instance/#6-confirming-your-instance", 
            "text": "Copy the cURL command to your clipboard and run it on your server.    The command will connect your server first to the Umbreo Platform, then securely configure it with the Blueprint you chose in previous steps.", 
            "title": "6. Confirming your instance"
        }, 
        {
            "location": "/getting-started/glossary/", 
            "text": "Umbreo\n\n\nPuppet\n\n\nWhat does it mean\n\n\n\n\n\n\n\n\n\n\nInstance\n\n\nNode\n\n\nA server running on an OS\n\n\n\n\n\n\nBlueprint\n\n\nRole\n\n\nA group of profiles\n\n\n\n\n\n\nProfile\n\n\nProfile\n\n\nA group of modules\n\n\n\n\n\n\nModule\n\n\nModule\n\n\nSoftware / Service", 
            "title": "Glossary"
        }, 
        {
            "location": "/core-concepts/instances/", 
            "text": "An instance is what logically links your server to Umbreo. It\ns attached to one \nblueprint\n that describes its role (e.g : Apache Web Server)\n\n\nThere are 3 types of instances, we will cover how to run each type and how to link your server with your instance.\n\n\n\n\nManually Provisioned Instances\n\n\nThe type of instances that are connected to Umbreo directly. It can be your virtual machine or any of your bare-bone servers.\n\n\nRead more\n\n\n\n\nAuto Provisioned Instances\n\n\nThe type of instances that are connected to Umbreo through one of the available cloud providers like AWS and Digital Ocean.\n\n\nIn addition to configuring these servers, Umbreo offers you the ability to create and run your servers in these clouds first using their APIs and then configure them using Umbreo.\n\n\nRead more\n\n\n\n\nUmbreo Online Instances\n\n\nThese instances are hosted and managed by Umbreo using \nDocker\n. They are useful for all kind of tests and experimentation purposes.\n\n\nFor example you can use Umbero Instances if you want to try a particular blueprint customization before deploying it into your infrastructure, or if you just want to get familiar with Umbreo.\n\n\nRead more\n\n\n\n\nYou can start by making your first instance by following this tutorial \nLaunch your first instance\n\n\nRead more about Blueprints \nhere\n.", 
            "title": "Instances"
        }, 
        {
            "location": "/core-concepts/instances/#manually-provisioned-instances", 
            "text": "The type of instances that are connected to Umbreo directly. It can be your virtual machine or any of your bare-bone servers.  Read more", 
            "title": "Manually Provisioned Instances"
        }, 
        {
            "location": "/core-concepts/instances/#auto-provisioned-instances", 
            "text": "The type of instances that are connected to Umbreo through one of the available cloud providers like AWS and Digital Ocean.  In addition to configuring these servers, Umbreo offers you the ability to create and run your servers in these clouds first using their APIs and then configure them using Umbreo.  Read more", 
            "title": "Auto Provisioned Instances"
        }, 
        {
            "location": "/core-concepts/instances/#umbreo-online-instances", 
            "text": "These instances are hosted and managed by Umbreo using  Docker . They are useful for all kind of tests and experimentation purposes.  For example you can use Umbero Instances if you want to try a particular blueprint customization before deploying it into your infrastructure, or if you just want to get familiar with Umbreo.  Read more   You can start by making your first instance by following this tutorial  Launch your first instance  Read more about Blueprints  here .", 
            "title": "Umbreo Online Instances"
        }, 
        {
            "location": "/core-concepts/blueprints/", 
            "text": "A Blueprint is what can be assigned to an \ninstance\n. The end result would be having a fully configured server with the software and services present in the blueprint.\n\n\nBlueprints contain one to many \nprofiles\n, each profile contains one to many modules. When you assign a blueprint to an instance, ultimately all the modules will be installed in your instance.\n\n\nEvery Module has its own set of parameters, a Blueprint will eventually be the sum of all parameters of its modules.\n\n\n\n\n\nAbstraction gives flexibility\n\n\nOur modules are now abstracted by profiles, then by blueprints. This way of organization offers flexibility and reusability of pieces of software across your instances.\n\n\nThe following examples illustrate how we can benefit from modules abstraction.\nThe same profile \nbase\n is used two times in two different architectures.", 
            "title": "Blueprints"
        }, 
        {
            "location": "/core-concepts/blueprints/#abstraction-gives-flexibility", 
            "text": "Our modules are now abstracted by profiles, then by blueprints. This way of organization offers flexibility and reusability of pieces of software across your instances.  The following examples illustrate how we can benefit from modules abstraction.\nThe same profile  base  is used two times in two different architectures.", 
            "title": "Abstraction gives flexibility"
        }, 
        {
            "location": "/core-concepts/profiles/", 
            "text": "A Profile is a group of one to many \nmodules\n. Its parameters override the modules parameters and can get override by a Blueprint parameters.\n\n\nProfiles abstract modules, as blueprints abstract profiles. This abstraction ensures flexibility and provides reusability of pieces of software across your infrastructure.\n\n\nRead more about how abstraction of modules works \nhere\n.", 
            "title": "Profiles"
        }, 
        {
            "location": "/core-concepts/modules/", 
            "text": "Modules are the Puppet templates that store the automation process in charge of installing and deploying softwares and services into \ninstances\n.\n\n\nUmbreo helps by concretizing the modules and making their parameters configurable through an easy User Interface.\n\n \n\n \n\n\nWhat is Puppet?\n\n\nPuppet is an open-source software configuration management tool that runs on *nix systems as well as Windows. It includes its own ruby-like declarative language to describe the configuration process.\n\n\nAny Puppet setup consists of a Puppet Master which is a server having \npuppetmaster\n package installed  in charge of managing configurations up to many servers.\n\n\n\n\nPuppet uses its own configuration language, which was designed to be accessible to sysadmins. The Puppet language does not require much formal programming experience and its syntax was inspired by the Nagios configuration file format.\n\n\n\n\nYou can read more about Puppet \nhere\n.\n\n \n\n \n\n\nPuppet Modules\n\n\nPuppet also has modules as a core concept. Puppet modules are constituted of one or more Puppet classes defined inside files ending with a \n.pp\n extension. \n\n\nEach Puppet class holds all the parameters and configurations needed that ultimately install and configure a software or a service in a server.\n\n \n\n \n\n\nExample 1 : Class that installs and configures Apache.\n\n\nclass apache (\n    $version = 'latest',\n    $service_ensure = \nrunning\n,\n    $service_enable = true,\n){\n  package {'apache2':\n    ensure =\n $version,\n    before =\n File['/etc/apache.conf'],\n  }\n  file {'/etc/apache2.conf':\n    ensure  =\n file,\n    owner   =\n 'apache',\n    content =\n template('apache/apache.conf.erb'),\n  }\n  service {'apache2':\n    ensure    =\n $service_ensure, # Using the class parameter from above\n    enable    =\n $service_enable,\n    subscribe =\n File['/etc/apache.conf'],\n  }\n}\n\n\n\n\n\n\nWhat Umbreo made out of Puppet modules?\n\n\nUmbreo\ns role consists of translating the Puppet modules into manageable plugins that can be easily configured through a User Interface.\n\n \n\n \n\n\nScreenshot : Example of configuring an advanced Apache module through Umbreo\ns UI\n\n\n\n\n\n\n\n\n\n\nModules when using Umbreo locally\n\n\nUmbreo has also made the process of integrating modules into the UI very accessible and customized by everyone if you are considering using Umbreo locally and your own Puppet Master. Read more about using Umbreo locally \nhere\n.\n\n\nIn order to make a module configurable through the UI, additionally to the traditional Puppet structure, in Umbreo each Puppet module has an \numbreo.json\n in its directory that describes the parameters and provides information about the module that will be used in the UI.\n\n\nBy using our ruby command line interface gem \numbreo_cli\n you can easily generate the JSON configuration file using module commands.\n\n\nLet\ns retake our previous \nexample\n and generate a JSON configuration file using the module command \numbreo module init\n \n\n\nThe generated file will be as follows :\n\n\n{\n  \nname\n: \napache\n,\n  \nparameters\n: [\n    {\n      \nname\n: \nversion\n,\n      \ndisplayed\n: \nVersion\n,\n      \ndescription\n: \n,\n      \ndefault\n: \nlatest\n,\n      \ntype\n: \nstring\n,\n    },\n    {\n      \nname\n: \nservice_ensure\n,\n      \ndisplayed\n: \nService Ensure\n,\n      \ndescription\n: \n,\n      \ndefault\n: \nrunning\n,\n      \ntype\n: \nstring\n,\n    },\n    {\n      \nname\n: \nservice_enable\n,\n      \ndisplayed\n: \nService Enable\n,\n      \ndescription\n: \n,\n      \ndefault\n: true,\n      \ntype\n: \nboolean\n,\n    }\n  ],\n  \ninformations\n: {\n    \ndisplay_name\n: \nApache Web Server\n,\n    \ndata\n: {\n    }\n  }\n}\n\n\n\n\n \nThe generated file will be imported and parsed by Umbreo, each parameter is converted into an input field able to store a value.\n\n\n\n\nRead more about Umbreo Command Line Interface \nhere\n.\n\n\nRead more about adding new modules to Umbreo \nhere\n.", 
            "title": "Modules"
        }, 
        {
            "location": "/core-concepts/modules/#what-is-puppet", 
            "text": "Puppet is an open-source software configuration management tool that runs on *nix systems as well as Windows. It includes its own ruby-like declarative language to describe the configuration process.  Any Puppet setup consists of a Puppet Master which is a server having  puppetmaster  package installed  in charge of managing configurations up to many servers.   Puppet uses its own configuration language, which was designed to be accessible to sysadmins. The Puppet language does not require much formal programming experience and its syntax was inspired by the Nagios configuration file format.   You can read more about Puppet  here .", 
            "title": "What is Puppet?"
        }, 
        {
            "location": "/core-concepts/modules/#puppet-modules", 
            "text": "Puppet also has modules as a core concept. Puppet modules are constituted of one or more Puppet classes defined inside files ending with a  .pp  extension.   Each Puppet class holds all the parameters and configurations needed that ultimately install and configure a software or a service in a server.", 
            "title": "Puppet Modules"
        }, 
        {
            "location": "/core-concepts/modules/#example-1-class-that-installs-and-configures-apache", 
            "text": "class apache (\n    $version = 'latest',\n    $service_ensure =  running ,\n    $service_enable = true,\n){\n  package {'apache2':\n    ensure =  $version,\n    before =  File['/etc/apache.conf'],\n  }\n  file {'/etc/apache2.conf':\n    ensure  =  file,\n    owner   =  'apache',\n    content =  template('apache/apache.conf.erb'),\n  }\n  service {'apache2':\n    ensure    =  $service_ensure, # Using the class parameter from above\n    enable    =  $service_enable,\n    subscribe =  File['/etc/apache.conf'],\n  }\n}", 
            "title": "Example 1 : Class that installs and configures Apache."
        }, 
        {
            "location": "/core-concepts/modules/#what-umbreo-made-out-of-puppet-modules", 
            "text": "Umbreo s role consists of translating the Puppet modules into manageable plugins that can be easily configured through a User Interface.", 
            "title": "What Umbreo made out of Puppet modules?"
        }, 
        {
            "location": "/core-concepts/modules/#screenshot-example-of-configuring-an-advanced-apache-module-through-umbreos-ui", 
            "text": "", 
            "title": "Screenshot : Example of configuring an advanced Apache module through Umbreo's UI"
        }, 
        {
            "location": "/core-concepts/modules/#modules-when-using-umbreo-locally", 
            "text": "Umbreo has also made the process of integrating modules into the UI very accessible and customized by everyone if you are considering using Umbreo locally and your own Puppet Master. Read more about using Umbreo locally  here .  In order to make a module configurable through the UI, additionally to the traditional Puppet structure, in Umbreo each Puppet module has an  umbreo.json  in its directory that describes the parameters and provides information about the module that will be used in the UI.  By using our ruby command line interface gem  umbreo_cli  you can easily generate the JSON configuration file using module commands.  Let s retake our previous  example  and generate a JSON configuration file using the module command  umbreo module init    The generated file will be as follows :  {\n   name :  apache ,\n   parameters : [\n    {\n       name :  version ,\n       displayed :  Version ,\n       description :  ,\n       default :  latest ,\n       type :  string ,\n    },\n    {\n       name :  service_ensure ,\n       displayed :  Service Ensure ,\n       description :  ,\n       default :  running ,\n       type :  string ,\n    },\n    {\n       name :  service_enable ,\n       displayed :  Service Enable ,\n       description :  ,\n       default : true,\n       type :  boolean ,\n    }\n  ],\n   informations : {\n     display_name :  Apache Web Server ,\n     data : {\n    }\n  }\n}   \nThe generated file will be imported and parsed by Umbreo, each parameter is converted into an input field able to store a value.   Read more about Umbreo Command Line Interface  here .  Read more about adding new modules to Umbreo  here .", 
            "title": "Modules when using Umbreo locally"
        }, 
        {
            "location": "/core-concepts/stacks/", 
            "text": "A Stack is a group of instances ready to get assigned by a group of blueprints respectively, thus it\ns a poweful way to get your instances working together.\n\n\nThe interesting feature behind using Stacks is the possibility to have \nshared parameters\n across the instances. It permits interaction between the instances.\n\n\nLet\ns assume you want a Stack that you will deploy to your instances, and you want the following Blueprints to be assigned to 4 of your instances :\n\n\n\n\nNginx Load Balancer x 1\n\n\nApache Web Server with PHP x 2\n\n\nMySQL Database Server x 1\n\n\n\n\nIn this Use Case we need to have IPs addresses shared from the Apache Web Servers to the Nginx Load Balancer in order to have a Load Balancing up and running.\n\n\n\n\n\n\n\n\n\n\n\n\n\nShared Parameters\n\n\nEach Stack has its own configuratble rule of which ways parameters need to be shared between instances.\n\n\nIn the example above, the shared parameters are managed in a way that each Apache Web Server instance shares its IP Address with the Nginx LoadBalancer instance.\n\n\n\n\nWhat next ?\n\n\nIn the very soon, you will be able to define your own Stacks using our Umbreo CLI gem.\nBut this requires using Umbreo in your own server.\n\n\nRead more about \nUmbreo Endpoints\n.\n\n\n\n\nYou can visit the Umbreo \nStacks\n page and start with your first Stack.", 
            "title": "Stacks"
        }, 
        {
            "location": "/core-concepts/stacks/#shared-parameters", 
            "text": "Each Stack has its own configuratble rule of which ways parameters need to be shared between instances.  In the example above, the shared parameters are managed in a way that each Apache Web Server instance shares its IP Address with the Nginx LoadBalancer instance.", 
            "title": "Shared Parameters"
        }, 
        {
            "location": "/core-concepts/stacks/#what-next", 
            "text": "In the very soon, you will be able to define your own Stacks using our Umbreo CLI gem.\nBut this requires using Umbreo in your own server.  Read more about  Umbreo Endpoints .   You can visit the Umbreo  Stacks  page and start with your first Stack.", 
            "title": "What next ?"
        }, 
        {
            "location": "/core-concepts/providers/", 
            "text": "Providers are what can make \nAuto-Provisioned Instances\n possible. They represent cloud providers where your servers are running. \n\n\nUntil now we support the following Cloud Providers :\n\n\n\n\nAmazong Web Services\n\n\nDigital Ocean\n\n\nOpen Stack\n\n\nGoogle Compute Engine\n\n\n\n\nFrom the \n Providers page\n, you will be able to choose one of the available cloud providers, then deploy the desired Blueprint to a particular server that you already have in the cloud or you can create new instances in the cloud by providing your credentials directly from Umbreo.\n\n\nYou can read about the other types of instances in this \narticle\n.", 
            "title": "Providers"
        }, 
        {
            "location": "/automating-deployments/manually-provisioned/", 
            "text": "The manually privisioned instances can be linked to your individual servers, bare-bone servers or virtual machines.\n\n\nOnce you assign a blueprint to your instance, you will have to run a \ncurl\n command line in your server\ns terminal in order to provision your server with the selected blueprint.\n\n\nYou can also use this type of instance to try out blueprints in a virtual machine that you have locally.\n\n\n\n\nGetting Started\n\n\n\n\n\n\nTo start with your first manually provisioned instance go to your \nInstances\n page \n \nNew Instance\n. Or you can directly click \ndeploy\n on a blueprint in the \nBlueprints\n page. \n\n\n\n\n\n\nThen you have to fill the form with the name and description of your instance, select a blueprint that you want to deploy in your instance, and finally choose \nManually Provisioned\n as a type of the instance.\n\n\n\n\n\n\nIf everything goes well you will be redirected to your new instance\ns page. There you will need to proceed by confirming your instance. To do that click \nConfirm your instance\n button and then copy the curl command.\n\n\n\n\n\n\nOn your server\ns terminal, paste the command line and run it to provision the server with the selected blueprint.", 
            "title": "Manually Provisioned Instances"
        }, 
        {
            "location": "/automating-deployments/manually-provisioned/#getting-started", 
            "text": "To start with your first manually provisioned instance go to your  Instances  page    New Instance . Or you can directly click  deploy  on a blueprint in the  Blueprints  page.     Then you have to fill the form with the name and description of your instance, select a blueprint that you want to deploy in your instance, and finally choose  Manually Provisioned  as a type of the instance.    If everything goes well you will be redirected to your new instance s page. There you will need to proceed by confirming your instance. To do that click  Confirm your instance  button and then copy the curl command.    On your server s terminal, paste the command line and run it to provision the server with the selected blueprint.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/automating-deployments/auto-provisioned/", 
            "text": "The auto-privisioned instances can be linked to your servers in the clouds. To do so, you need to create a new provider. Read more about providers \nhere\n.\n\n\nDuring the creation of your provider you will need to use credentials given by your cloud service to make their APIs accessible by Umbreo.\n\n\n\n\nGetting Started\n\n\n\n\n\n\nTo start with your first auto provisioned instance go to your \nInstances\n page \n \nNew Instance\n. Or you can directly click \ndeploy\n on a blueprint in the \nBlueprints\n page. \n\n\n\n\n\n\nNow you have to fill the form with the name and description of your instance, select a blueprint that you want to deploy in your instance, and finally choose \nAuto-Provisioned\n Instance as a type of the instance.\n\n\n\n\n\n\nOnce you do that, you will be asked to choose a provider, or you can create a new one and fill the credentials to proceed.\n\n\n\n\n\n\nIf everything goes well you will be redirected to your new instance\ns page. There you will need to proceed by running the provision of your instance with the selected blueprint.", 
            "title": "Auto-Provisioned Instances"
        }, 
        {
            "location": "/automating-deployments/auto-provisioned/#getting-started", 
            "text": "To start with your first auto provisioned instance go to your  Instances  page    New Instance . Or you can directly click  deploy  on a blueprint in the  Blueprints  page.     Now you have to fill the form with the name and description of your instance, select a blueprint that you want to deploy in your instance, and finally choose  Auto-Provisioned  Instance as a type of the instance.    Once you do that, you will be asked to choose a provider, or you can create a new one and fill the credentials to proceed.    If everything goes well you will be redirected to your new instance s page. There you will need to proceed by running the provision of your instance with the selected blueprint.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/automating-deployments/test-instance/", 
            "text": "The Umbreo online instances are the type of instances running in the Umbreo\ns cloud, they are powered by \nDocker\n.\n\n\nOnce you assign a blueprint to your instance, you will have a terminal in the browser pointing to your temporary Docker Container, the purpose of the Umbreo online instances is to let you try and do experimentations and tests of blueprints before you deploy them directly in your real servers.\n\n\nThe moment you run a new Umbreo online instance, you will have 1 hour before the container will get destroyed. But before that you will have the possibility to commit the Docker image and download it.\n\n\n\n\nGetting Started\n\n\n\n\n\n\nTo start with your first Umbreo online instance go to your \nInstances\n page \n \nNew Instance\n. Or you can directly click \ndeploy\n on a blueprint in the \nBlueprints\n page.\n\n\n\n\n\n\nThen you have to fill the form with the name and description of your instance, select a blueprint that you want to deploy in your instance, and finally choose \nUmbreo Online Instance\n as a type of the instance.\n\n\n\n\n\n\nIf everything goes well you will be redirected to your new instance\ns page. You will see there a terminal right in your browser (sometimes it can take several minutes before you can see your terminal working). Login with username \nroot\n and password \nroot\n.\n\n\n\n\n\n\nRun the curl command line inside the terminal to provision the container with the selected blueprint.", 
            "title": "Umbreo Online Instances"
        }, 
        {
            "location": "/automating-deployments/test-instance/#getting-started", 
            "text": "To start with your first Umbreo online instance go to your  Instances  page    New Instance . Or you can directly click  deploy  on a blueprint in the  Blueprints  page.    Then you have to fill the form with the name and description of your instance, select a blueprint that you want to deploy in your instance, and finally choose  Umbreo Online Instance  as a type of the instance.    If everything goes well you will be redirected to your new instance s page. You will see there a terminal right in your browser (sometimes it can take several minutes before you can see your terminal working). Login with username  root  and password  root .    Run the curl command line inside the terminal to provision the container with the selected blueprint.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/deploying-in-the-clouds/aws/", 
            "text": "The tutorial assumes that you already created an account and you\nre logged in to the Umbreo Dashboard. you will need also a valid AWS account.\n\n\nAlso for demonstration purposes we\nll be deploying the \nDocker\n blueprint, but Umbreo has more than a dozen handcrafted, ready to use \nBlueprints\n so you can quickly and easily get started.\n\n\n1. Connect Cloud Provider\n\n\nFirst, we need to create a new provider, so make sure you\nre on the \nProviders\n page.\n\n\n\n\n\n\n\n\nSince we\nll be using AWS EC2, Click on the \nAdd\n button on the card representing \nAmazon Web Services\n (as shown in the screenshot below).\n\n\n\n\n\n\n\n\nA form will appear, where you can give a name for your that provider (optionally, you can add a description too), also make sure to enter valid AWS API keys. Finally click \nSave\n to move to the next step.\n\n\n\n\nIf AWS API keys were correct, your new provider should appear in the provider list and have state \nAvailable\n.\n\n\n\n\n2. Deploy Blueprint\n\n\nNow that we\nve connected a \nCloud Provider\n, it\ns time to deploy a Blueprint. \n\n\nTo do so, let\ns go to the \nBlueprints\n page and click  the \nDeploy\n button on the card representing Docker.\n\n\n\n\n\n\n\n\nA form will appear asking you to give a unique name to the instance (which we\nll be automatically created for you in just a minute), make sure you select the \nAuto provisioned\n option, choose the provider we created in the previous step, and then click the \nDone\n button. \n\n\n\n\n\n\n3. Launch Instance\n\n\nOn the next screen click \nLaunch Instance\n.\n\n\nAn EC2 instance we\nll be automatically provisioned on your behalf and configured with the Blueprint we chose in the previous steps. (In this how-to guide we chose to deploy Docker). \n\n\nGive it few minutes and your server instance we\nll be ready for showtime!", 
            "title": "Amazon Web Services"
        }, 
        {
            "location": "/deploying-in-the-clouds/aws/#1-connect-cloud-provider", 
            "text": "First, we need to create a new provider, so make sure you re on the  Providers  page.     Since we ll be using AWS EC2, Click on the  Add  button on the card representing  Amazon Web Services  (as shown in the screenshot below).     A form will appear, where you can give a name for your that provider (optionally, you can add a description too), also make sure to enter valid AWS API keys. Finally click  Save  to move to the next step.   If AWS API keys were correct, your new provider should appear in the provider list and have state  Available .", 
            "title": "1. Connect Cloud Provider"
        }, 
        {
            "location": "/deploying-in-the-clouds/aws/#2-deploy-blueprint", 
            "text": "Now that we ve connected a  Cloud Provider , it s time to deploy a Blueprint.   To do so, let s go to the  Blueprints  page and click  the  Deploy  button on the card representing Docker.     A form will appear asking you to give a unique name to the instance (which we ll be automatically created for you in just a minute), make sure you select the  Auto provisioned  option, choose the provider we created in the previous step, and then click the  Done  button.", 
            "title": "2. Deploy Blueprint"
        }, 
        {
            "location": "/deploying-in-the-clouds/aws/#3-launch-instance", 
            "text": "On the next screen click  Launch Instance .  An EC2 instance we ll be automatically provisioned on your behalf and configured with the Blueprint we chose in the previous steps. (In this how-to guide we chose to deploy Docker).   Give it few minutes and your server instance we ll be ready for showtime!", 
            "title": "3. Launch Instance"
        }, 
        {
            "location": "/deploying-in-the-clouds/gcompute/", 
            "text": "Google compute engine is now available in our platform as promised. Now you can create and customize your GCE instances from our \nDashboard\n in a few clicks.\n\n\n\n\nFeatures\n\n\nThe launch instance interface lets you customize two kind of configuration:\n     \n\n    \nServer region:\n The region where you want the instance to be in.\n\n    \nMachine type:\n N\u00b0 of vCore and Memory size. \n\n    \nOs image:\n Ubuntu, CenOS, RedHat. \n\n    \nNetwork:\n The network interface your instance should be connected to.     \nDisk size.\n\n    \n\n    \n\n    \n\n\n\n\n   \n\n\n \n\nAdvanced (optional):\n    \n\n    \nFirewall rule(s):\n To forward ports between instances in/out datacenter, which helps connect clusters and production servers easily.\n\n    \n\n    \n\n\n\n\n       \n\n\n\n\nDemo", 
            "title": "Google Compute Engine"
        }, 
        {
            "location": "/deploying-in-the-clouds/gcompute/#features", 
            "text": "The launch instance interface lets you customize two kind of configuration:\n      \n     Server region:  The region where you want the instance to be in. \n     Machine type:  N\u00b0 of vCore and Memory size.  \n     Os image:  Ubuntu, CenOS, RedHat.  \n     Network:  The network interface your instance should be connected to.      Disk size. \n     \n     \n              \nAdvanced (optional):\n     \n     Firewall rule(s):  To forward ports between instances in/out datacenter, which helps connect clusters and production servers easily.", 
            "title": "Features"
        }, 
        {
            "location": "/deploying-in-the-clouds/gcompute/#demo", 
            "text": "", 
            "title": "Demo"
        }, 
        {
            "location": "/services/monitoring/", 
            "text": "As promised, monitoring feature is now available in your platform Umbreo. The monitoring web interface offers you the abilitiy to track your instances in real time.\n\n\nZabbix\n\n\nAs a plugin, Umbreo utilizes Zabbix; a well reputed open source monitoring tool. In our next sprints, we will provide more monitoring plugins, to offer you the comfort and the ability to choose your favorite.\n\n\n\n\n\n\nTracking your instances\n\n\nFrom the same web interface, you have the ability to navigate and explore the status of your instances. Our goal regarding to this feature is to help system administrators and developers to have access to all information related to their instances in order to make the right decisions while using the other parts of the platform.\n\n\nNote that an instance should be confirmed in Umbreo in order to visualize its information.\n\n\n\n\n\n\nDemo", 
            "title": "Monitoring"
        }, 
        {
            "location": "/services/monitoring/#zabbix", 
            "text": "As a plugin, Umbreo utilizes Zabbix; a well reputed open source monitoring tool. In our next sprints, we will provide more monitoring plugins, to offer you the comfort and the ability to choose your favorite.", 
            "title": "Zabbix"
        }, 
        {
            "location": "/services/monitoring/#tracking-your-instances", 
            "text": "From the same web interface, you have the ability to navigate and explore the status of your instances. Our goal regarding to this feature is to help system administrators and developers to have access to all information related to their instances in order to make the right decisions while using the other parts of the platform.  Note that an instance should be confirmed in Umbreo in order to visualize its information.", 
            "title": "Tracking your instances"
        }, 
        {
            "location": "/services/monitoring/#demo", 
            "text": "", 
            "title": "Demo"
        }, 
        {
            "location": "/services/ror-deployment/", 
            "text": "Getting Started\n\n\nRuby on Rails deployment is a solution to deploy your Ruby on Rails application in one of your servers with an automated Continuous Integration setup.\n\n\nRequirements:\n\n\n\n\nTwo virtual machines / servers\n\n\nRuby on Rails application hosted in a code repository\n\n\nUnderstanding Deployment Types in Umbreo\n\n\n\n\nSetting up the CI Server\n\n\nLog into your Umbreo dashboard and open your \nServices\n page and start deploying a service by clicking on \nDeploy Service\n Button.\n\n\n\nChoose \nContinous Integration\n Service category.\n\n\n\n\n\n\nChoose \nRuby on Rails deployment\n Service.\n\n\n\n\nFill the form with the appropriate information.\n\n\n\n\nChoose a deployment type. Read more about types of deployments here.\n\n\n\n\nGo back to your Services page and make sure your service is ready.\n\n\n\n\nDeploy your service on a server.\n\n\n\n\n\nSetting up the Rails server\n\n\nLog into your Umbreo dashboard and open your \nInstances\n page and start creating an instance by clicking on \nNew Instance\n Button.\n\n\n\nFill the form with the appropriate information.\n\n\n\n\nChoose a deployment type. Read more about types of deployments here.\n\n\n\n\nEnable \nContinuous Integration\n and select the service you just created.\n\n\n\n\nYou can adjust the parameters of the service you created before. And then confirm by clicking \nCreate Instance\n Button.\n\n\n\n\nDeploy your instance on a server and you\nre all set!", 
            "title": "Ruby on Rails Deployment"
        }, 
        {
            "location": "/services/ror-deployment/#getting-started", 
            "text": "Ruby on Rails deployment is a solution to deploy your Ruby on Rails application in one of your servers with an automated Continuous Integration setup.  Requirements:   Two virtual machines / servers  Ruby on Rails application hosted in a code repository  Understanding Deployment Types in Umbreo", 
            "title": "Getting Started"
        }, 
        {
            "location": "/services/ror-deployment/#setting-up-the-ci-server", 
            "text": "Log into your Umbreo dashboard and open your  Services  page and start deploying a service by clicking on  Deploy Service  Button.  \nChoose  Continous Integration  Service category.   \nChoose  Ruby on Rails deployment  Service.  \nFill the form with the appropriate information.  \nChoose a deployment type. Read more about types of deployments here.  \nGo back to your Services page and make sure your service is ready.  \nDeploy your service on a server.", 
            "title": "Setting up the CI Server"
        }, 
        {
            "location": "/services/ror-deployment/#setting-up-the-rails-server", 
            "text": "Log into your Umbreo dashboard and open your  Instances  page and start creating an instance by clicking on  New Instance  Button.  \nFill the form with the appropriate information.  \nChoose a deployment type. Read more about types of deployments here.  \nEnable  Continuous Integration  and select the service you just created.  \nYou can adjust the parameters of the service you created before. And then confirm by clicking  Create Instance  Button.  \nDeploy your instance on a server and you re all set!", 
            "title": "Setting up the Rails server"
        }, 
        {
            "location": "/services/django-deployment/", 
            "text": "Coming Soon", 
            "title": "Django Deployment"
        }, 
        {
            "location": "/services/django-deployment/#coming-soon", 
            "text": "", 
            "title": "Coming Soon..."
        }, 
        {
            "location": "/developers/cli/", 
            "text": "List Umbreo Command CLI\n\n\n\n\nWe have 2 ways to call action command:\n\n\n\n\ncommand-suite\n\n\ncommand-form\n\n\n\n\n\n\nWiki Umbreo Command CLI\n\n\n\n\nEndpoint Configuration\n\n\nAuthentication\n\n\nLogin\n\n\nLogout\n\n\n\n\n\n\nInstance\n\n\nList or filter\n\n\nSearch\n\n\nShow detail\n\n\nDeploy Blueprint\n\n\n\n\n\n\nModule\n\n\nList\n\n\nSearch\n\n\n\n\n\n\nProfile\n\n\nList\n\n\nSearch\n\n\n\n\n\n\nSystem\n\n\nList\n\n\n\n\n\n\nBlueprint\n\n\nList or filter\n\n\nSearch\n\n\nShow detail\n\n\nDelete my custom blueprint\n\n\nCreate custom blueprint\n\n\nDeploy blueprint\n\n\nExport blueprint json\n\n\nValidate blueprint json\n\n\n\n\n\n\nStack Template\n\n\nList or filter\n\n\nSearch\n\n\nShow detail\n\n\nExport stack template json\n\n\nExport blueprints of stack template json\n\n\n\n\n\n\nStack\n\n\nList\n\n\nSearch\n\n\nShow detail\n\n\nCreate stack\n\n\n\n\n\n\nCloud Provider\n\n\nList\n\n\nExport cloud provider json\n\n\nValidate cloud provider json\n\n\n\n\n\n\nProvider\n\n\nList or filter\n\n\nSearch\n\n\nShow detail\n\n\nCreate provider\n\n\nGet Data Credential\n\n\n\n\n\n\nService Provider\n\n\nList or filter\n\n\nSearch\n\n\nShow detail\n\n\nExport service provider json\n\n\nValidate service provider json\n\n\n\n\n\n\nService\n\n\nList or filter\n\n\nSearch\n\n\nShow detail\n\n\nCreate Service\n\n\nExport service json\n\n\nValidate service json\n\n\n\n\n\n\n\n\n\n\nGetting Started\n\n\nThis guide will help you to setup and run CLI\n\n\n\nStep1: install bundler\n\n\n$ gem install bundler\n\n\n\n\nStep2: Run bundle install\n\n\n$ bundle install\n\n\n\n\n\n\nHow to Run CLI\n\n\nYou can simply go run this command\n\n\nFor first time\n\n\n$ bundle exec bin/umbreo [command] [arg]\n\n\n\n\nFor secondtime\n\n\n$ umbreo [command] [arg]\n\n\n\n\n\n\nBelow are current lists command on CLI\n\n\n\n\n1. Endpoint Configuration\n\n\nWe can switch host endpoint for development mode\n\n\ncommand-suite\n\n\n$ umbreo endpoint configure --url endpoint_url\n\n\n\n\n$ umbreo endpoint configure --url https://beta.umbreo.com\n\n\n\n\ncommand-form\n\n\n$ umbreo endpoint configure\n$ Enter your Endpoint (URL): https://beta.umbreo.com\n\n\n\n\n\n\n2. Authentication\n\n\nLogin\n\n\nFile Credential will be created on ~/.umbreoconfig file\n\n\ncommand-suite\n\n\n$ umbreo login --email your_email --password your_password\n\n\n\n\n$ umbreo login --email foo@umbreo.com --password foobar\n\n\n\n\ncommand-form\n\n\n$ umbreo endpoint login\n\nEnter your Umbreo credentials.\n$ Email: foobar@umbreo.com \n$ Password (Typing will be hidden):\n\n\n\n\nLogout\n\n\n$ umbreo logout\nLocal credentials cleared.\n\n\n\n\n\n\n3. Instance\n\n\nList or filter\n\n\ncommand-suite\n\n\n$ umbreo instance list --register_type |all|registered|unregistered| --type |all|test|manual|provider| --cloud |aws|gcompute|docean|openstack|XenServer| --page |number_of_page|\n\n\n\n\n$ umbreo instance list --register_type all --type test --cloud aws --page 2\n\n\n\n\ncommand-form\n\n\n$ umbreo instance list\n\n1. all\n2. registered\n3. unregistered\n$ Please choose filter of register type? all\n\n1. all\n2. test\n3. manual\n4. provider\n$ Please choose filter of instance deployment type? test\n\n\n\n\nSearch\n\n\ncommand-suite\n\n\n$ umbreo instance search --keyword |search_keyword| --register_type |all|registered|unregistered| --type |all|test|manual|provider| --cloud |aws|gcompute|docean|openstack|XenServer| --page |number_of_page|\n\n\n\n\n$ umbreo instance search --keyword 'Foo Instance' --register_type all --type test --cloud aws\n\n\n\n\ncommand-form\n\n\n$ umbreo instance search\n\n1. all\n2. registered\n3. unregistered\n$ Please choose filter of register type? all\n\n1. all\n2. test\n3. manual\n4. provider\n$ Please choose filter of instance deployment type? test\n\n$ Search keyword: Foo Instance\n\n\n\n\nShow detail\n\n\ncommand-suite\n\n\n$ umbreo instance show --id |id_or_name|\n\n\n\n\n$ umbreo instance show --id 'foo instance'\n\n\n\n\ncommand-form\n\n\n$ umbreo instance show\n$ Name or ID of Instance: foo instance\n\n\n\n\nDeploy Blueprint\n\n\ncommand-suite\n\n\n$ umbreo instance deploy --custom |optional_to_get_custom_or_umbreo_blueprints| --name |name_of_instance| --desc |desc_of_instance| --blueprint |directory_blueprint_json_file| --service_logging |directory_my_service_logging_json_file| --service_monitoring |directory_service_monitoring_json_file| --service_backup |directory_service_backup_json_file| --type |test|manual|provider| --provider |directory_my_provider_json_file|\n\n\n\n\n$ umbreo instance deploy --name 'Foo Instance' --desc 'My first instance' --type provider --blueprint apache_webserver_with_php.json --provider digital_ocean_provider.json --service_backup baculaexternal.json\n\n\n\n\ncommand-form\n\n\n$ umbreo instance deploy --custom\n\n$ Name of new instance: Foo Instance\n$ Description of new instance: My First instance\n$ Blueprint directory File JSON: custom_apache_webserver_with_php.json\n$ Service logging directory File JSON (optional): \n$ Service monitoring directory File JSON (optional): \n$ Service backup directory File JSON (optional): \n\n1. test\n2. manual\n3. provider\n$ Please choose deployment type? 1\n\n\n\n\n\n\n\n4. Module\n\n\nAll command that\ns associated to Module\n\n\nList\n\n\ncommand-suite\n\n\n$ umbreo module list --page |number_of_page|\n\n\n\n\n$ umbreo module list\n\n\n\n\nSearch\n\n\ncommand-suite\n\n\n$ umbreo module search --keyword |search_keyword| --page |number_of_page|\n\n\n\n\n$ umbreo module search --keyword php\n\n\n\n\n\n\n5. Profile\n\n\nAll command that\ns associated to Profile\n\n\nList\n\n\ncommand-suite\n\n\n$ umbreo profile list --page |number_of_page|\n\n\n\n\n$ umbreo profile list\n\n\n\n\nSearch\n\n\ncommand-suite\n\n\n$ umbreo profile search --keyword |search_keyword| --page |number_of_page|\n\n\n\n\n$ umbreo profile search --keyword rails\n\n\n\n\n\n\n6. System\n\n\nList\n\n\ncommand-suite\n\n\n$ umbreo system list\n\n\n\n\n\n\n7. Blueprint\n\n\nAll command that\ns associated to Blueprint\n\n\nList or filter\n\n\ncommand-suite\n\n\n$ umbreo blueprint list --custom |optional_to_get_custom_or_umbreo_blueprints| --os |all|linux|windows| --page |number_of_page|\n\n\n\n\n$ umbreo blueprint list --os all\n\n\n\n\ncommand-form\n\n\n$ umbreo blueprint list\n\n1. all\n2. linux\n3. windows\n$ Please choose filter of instance provider? all\n\n\n\n\nSearch\n\n\ncommand-suite\n\n\n$ umbreo blueprint search --keyword |search_keyword| --custom |optional_to_get_custom_or_umbreo_blueprints| --os |all|linux|windows| --page |number_of_page|\n\n\n\n\n$ umbreo blueprint search --keyword 'lamp server' --os all\n\n\n\n\ncommand-form\n\n\n$ umbreo blueprint search\n\n1. all\n2. linux\n3. windows\n$ Please choose filter of instance provider? all\n\n$ Search keyword: lamp server\n\n\n\n\nShow detail\n\n\ncommand-suite\n\n\n$ umbreo blueprint show --id |id_or_slug| --custom |optional_to_get_custom_or_umbreo_blueprints|\n\n\n\n\n$ umbreo blueprint show --id lamp-server\n\n\n\n\ncommand-form\n\n\n$ umbreo blueprint show\n$ ID or Slug of blueprint: lamp-server\n\n\n\n\noutput\n\n\nID: 3\nName: LAMP Server\nDescription: \nOS: linux\n\n\n\n\nDelete my custom blueprint\n\n\nDelete bluprient can bse used if a custom blueprint didn\nt have instance.\n\n\ncommand-suite\n\n\n$ umbreo delete --id |id_or_slug|\n\n\n\n\n$ umbreo delete --id foo-blueprint\n\n\n\n\ncommand-form\n\n\n$ umbreo blueprint delete\nId or Slug Custom Blueprint: foo-blueprint\n\n\n\n\nCreate custom blueprint\n\n\ncommand-suite\n\n\n$ umbreo blueprint create --name |name_blueprint| --operating_system |linux|windows| --system |name_ofsystem| --profile |profiles|\n\n\n\n\n$ umbreo blueprint create --name 'foo blueprint' --operating_system linux --system 'Ubuntu 12.04' --profile 'Ruby, Postgresql'\n\n\n\n\ncommand-form\n\n\n$ umbreo blueprint create\n\n$ Name of blueprint: Foo Blueprint\n\n1. linux\n2. windows\n$ Please choose your blueprint operating system? linux\n\n$ Description: My first blueprint\n\n1. Ubuntu\n2. CentOS\n3. Fedora\n4. Ubuntu 12.04\n5. Ubuntu 14.04\n6. CentOS 5\n7. CentOS 6\n8. CentOS 7\n9. Fedora 19\n10. Fedora 20\n11. Ubuntu 10.04\n12. Windows\n$ Please choose your blueprint system? Ubuntu 10.04\n\n$ Add profiles (call list_profiles to show profiles) eg: 'Ruby, Postgresql': Ruby, Postgresql\n\n\n\n\nDeploy blueprint\n\n\nExport blueprint json\n\n\ncommand-suite\n\n\n$ umbreo blueprint export --custom |optional_to_get_custom_or_umbreo_blueprints| --id |id_or_name_of_blueprint|\n\n\n\n\n$ umbreo blueprint export --custom --id 'foo-blueprint'\n\n\n\n\ncommand-form\n\n\n$ umbreo blueprint export --custom\nID or Slug of Blueprint: foo-blueprint\n\n\n\n\nValidate blueprint json\n\n\ncommand-suite\n\n\n$ umbreo blueprint valid --file |directory_of_json_file|\n\n\n\n\n$ umbreo blueprint valid --file foo_blueprint.json\n\n\n\n\ncommand-form\n\n\n$ umbreo blueprint validate\n$ Directory of Blueprint: foo_blueprint.json\n\n\n\n\n\n\n8. Stack Template\n\n\nAll command that\ns associated to Stack Template\n\n\nList or filter\n\n\ncommand-suite\n\n\n$ umbreo stack_template list\n\n\n\n\nSearch\n\n\ncommand-suite\n\n\n$ umbreo stack_template search --keyword |search_keyword|\n\n\n\n\n$ umbreo stack_template search --keyword php\n\n\n\n\ncommand-form\n\n\n$ umbreo stack_template search\n$ Keyword of Stack Template: php\n\n\n\n\nShow detail\n\n\ncommand-suite\n\n\n$ umbreo stack_template show --id |id_or_name|\n\n\n\n\n$ umbreo stack_template show --id 'Load Balanced Lamp Server'\n\n\n\n\ncommand-form\n\n\n$ umbreo stack_template show\n$ Name or id of Stack Template: Load Balanced Lamp Server\n\n\n\n\nExport stack template json\n\n\ncommand-suite\n\n\n$ umbreo stack_template export --id |id_or_name_of_blueprint|\n\n\n\n\n$ umbreo stack_template export --id 'Load Balanced Lamp Server'\n\n\n\n\ncommand-form\n\n\n$ umbreo stack_template export\nName or ID of Stack Template: Load Balanced Lamp Server\n\n\n\n\nExport blueprints of stack template json\n\n\ncommand-suite\n\n\n$ umbreo stack_template blueprint_export --id |id_or_name_of_blueprint|\n\n\n\n\n$ umbreo stack_template blueprint_export --id 'Load Balanced Lamp Server'\n\n\n\n\ncommand-form\n\n\n$ umbreo stack_template blueprint_export\nName or ID of Stack Template: Load Balanced Lamp Server\n\n\n\n\n\n\n9. Stack\n\n\nAll command that\ns associated to Stack\n\n\nList\n\n\ncommand-suite\n\n\n$ umbreo stack list\n\n\n\n\nSearch\n\n\ncommand-suite\n\n\n$ umbreo stack search --keyword |search_keyword|\n\n\n\n\n$ umbreo stack search --keyword 'Stack One'\n\n\n\n\ncommand-form\n\n\n$ umbreo stack search\n$ Keyword of Stack: one\n\n\n\n\nShow detail\n\n\ncommand-suite\n\n\n$ umbreo stack show --id |id_or_name_stack|\n\n\n\n\n$ umbreo stack show --id 'Foo Stack'\n\n\n\n\ncommand-form\n\n\n$ umbreo stack show\n$ Name or ID of Stack: Foo Stack\n\n\n\n\nCreate stack\n\n\n$ umbreo stack create --id |id_or_name_stack_template| --name |name_of_stack| --desc |desc_of_stack|\n\n\n\n\n$ umbreo stack create --id 1 --name 'Foo Stack' --desc 'My first Foo Stack'\n\n1. yes\n2. no\n$ Will you add Nginx Webserver? yes\n$ Description of new instance: My first node stack\n$ Blueprint directory File JSON: /Users/foo/Documents/json/nginx_webserver.json\n$ Service logging directory File JSON (optional): \n$ Service monitoring directory File JSON (optional): \n$ Service backup directory File JSON (optional): \n\n1. test\n2. manual\n3. provider\n$ Please choose deployment type? 3\n$ Compute provider directory File JSON: /Users/foo/Documents/json/digital_ocean_provider.json\n\n\n\n\n\n\n10. Cloud Provider\n\n\nAll command that\ns associated to Stack\n\n\nList\n\n\ncommand-suite\n\n\n$ umbreo cloud_provider list\n\n\n\n\nExport cloud provider json\n\n\ncommand-suite\n\n\n$ umbreo cloud_provider export --id |id_or_slug_of_cloud_provider|\n\n\n\n\n$ umbreo cloud_provider export --id aws\n\n\n\n\ncommand-form\n\n\n$ umbreo cloud_provider export\n$ ID or Slug of Cloud Provider: aws\n\n\n\n\nValidate cloud provider json\n\n\ncommand-suite\n\n\n$ umbreo cloud_provider valid --file |directory_of_json_file|\n\n\n\n\n$ umbreo cloud_provider valid --file amazon_web_services(aws).json\n\n\n\n\ncommand-form\n\n\n$ umbreo blueprint validate\n$ Directory File JSON: amazon_web_services(aws).json\n\n\n\n\n\n\n11. Provider\n\n\nList or filter\n\n\ncommand-suite\n\n\n$ umbreo provider list --cloud |slug_cloud_provider| --page |number_of_page|\n\n\n\n\n$ umbreo provider list --cloud all --page 2\n\n\n\n\ncommand-form\n\n\n$ umbreo provider list --page 2\n\n1. all\n2. aws\n3. gcompute\n4. docean\n5. openstack\n6. XenServer\n$ Please choose Cloud Provider filter? all\n\n\n\n\nSearch\n\n\ncommand-suite\n\n\n$ umbreo provider search --cloud |slug_cloud_provider| --keyword |search_keyword| --page |number_of_page|\n\n\n\n\n$ umbreo provider search --cloud docean --keyword foo\n\n\n\n\ncommand-form\n\n\n$ umbreo provider search\n\n1. all\n2. aws\n3. gcompute\n4. docean\n5. openstack\n6. XenServer\n$ Please choose Cloud Provider filter? docean\n\n$ Search keyword: FooPro1\n\n\n\n\nShow detail\n\n\ncommand-suite\n\n\n$ umbreo provider show --id |id_or_name|\n\n\n\n\n$ umbreo provider show --id 'FooPro1'\n\n\n\n\ncommand-form\n\n\n$ umbreo provider show\n$ Name or ID of Provider: FooPro1\n\n\n\n\nCreate provider\n\n\nFor create provider, we have to export cloud provider json first\n\n\ncommand-suite\n\n\n $ umbreo provider:create |aws|gcompute|docean|openstack|xenserver| --file |directory_of_json_file| --name |provider_name| --desc |provider_description|\n\n\n\n\n $ umbreo provider:create digital_ocean --file digital_ocean.json --name 'Foo Instance'\n\n\n\n\ncommand-form\n\n\n$ umbreo cloud_provider:create digital_ocean \n$ Provider Name: Foo Instance\n$ Description (optional): test\n$ Directory of File: digital_ocean.json\n\n\n\n\nGet Data Credential\n\n\nFor create instance, we need data credential from if we choose provider as deployment type\n\n\nDigital Ocean\n\n\nGet Images for Digital Ocean Provider\n\n\n$ umbreo provider:digital_ocean images --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:digital_ocean images --id 'Foo Provider'\n\n\n\n\nGet Flavors for Digital Ocean Provider\n\n\n$ umbreo provider:digital_ocean flavors --id |id_or_name_provider| --image |id_image_digital_ocean_provider|\n\n\n\n\n$ umbreo provider:digital_ocean flavors --id 'Foo Provider' --image 18830380\n\n\n\n\nGet Regions for Digital Ocean Provider\n\n\n$ umbreo provider:digital_ocean regions --id |id_or_name_provider| --image |id_image_digital_ocean_provider|\n\n\n\n\n$ umbreo provider:digital_ocean regions --id 'Foo Provider' --image 18830380\n\n\n\n\nGet Compute Params JSON file\n\n\n$ umbreo provider:digital_ocean export --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:digital_ocean export --id 'Foo Provider'\n\n\n\n\nCheck valid Compute Params JSON file\n\n\n$ umbreo provider:digital_ocean valid --file |directory_of_json_file|\n\n\n\n\n$ umbreo provider:digital_ocean valid --file digital_ocean_compute_params.json\n\n\n\n\nOpenstack\n\n\nGet Zone for Openstack\n\n\n$ umbreo provider:openstack zones --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:openstack zones --id 'Openstack Foo Provider'\n\n\n\n\nGet Flavor for Openstack\n\n\n$ umbreo provider:openstack flavors --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:openstack flavors --id 'Openstack Foo Provider'\n\n\n\n\nGet Image for Openstack\n\n\n$ umbreo provider:openstack images --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:openstack images --id 'Openstack Foo Provider'\n\n\n\n\nGet Group for Openstack\n\n\n$ umbreo provider:openstack groups --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:openstack groups --id 'Openstack Foo Provider'\n\n\n\n\nGet Keypair for Openstack\n\n\n$ umbreo provider:openstack keypairs --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:openstack keypairs --id 'Openstack Foo Provider'\n\n\n\n\nGet Export for Openstack\n\n\n$ umbreo provider:openstack export --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:openstack export --id 'Openstack Foo Provider'\n\n\n\n\nGet Validate for Openstack\n\n\n$ umbreo provider:openstack valid --file |directory_of_json_file|\n\n\n\n\n$ umbreo provider:openstack valid --file openstack_provider.json\n\n\n\n\nGoogle Cloud Engine\n\n\nGet Image for Google Compute Engine\n\n\n$ umbreo provider:google_ce images --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:google_ce images --id 'GCE Foo Provider'\n\n\n\n\nGet Region for Google Compute Engine\n\n\n$ umbreo provider:google_ce regions --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:google_ce regions --id 'GCE Foo Provider'\n\n\n\n\nGet Machine for Google Compute Engine\n\n\n$ umbreo provider:google_ce machines --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:google_ce machines --id 'GCE Foo Provider'\n\n\n\n\nGet Network for Google Compute Engine\n\n\n$ umbreo provider:google_ce networks --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:google_ce networks --id 'GCE Foo Provider'\n\n\n\n\nGet Export for Google Compute Engine\n\n\n$ umbreo provider:google_ce export --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:google_ce export --id 'GCE Foo Provider'\n\n\n\n\nGet Validate for Google Compute Engine\n\n\n$ umbreo provider:google_ce valid --file |directory_of_json_file|\n\n\n\n\n$ umbreo provider:google_ce valid --file google_compute_engine_service_provider.json\n\n\n\n\nAmazon Web Service\n\n\nGet Images for AWS Provider\n\n\n$ umbreo provider:amazon_web_service images --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:amazon_web_service images --id 'AWS Foo Provider'\n\n\n\n\nGet Size Storage for AWS Provider\n\n\n$ umbreo provider:amazon_web_service sizes --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:amazon_web_service sizes --id 'AWS Foo Provider'\n\n\n\n\nGet Region for AWS Provider\n\n\n$ umbreo provider:amazon_web_service regions --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:amazon_web_service regions --id 'AWS Foo Provider'\n\n\n\n\nGet Keypair for AWS Provider\n\n\n$ umbreo provider:amazon_web_service keypairs --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:amazon_web_service keypairs --id 'AWS Foo Provider'\n\n\n\n\nGet Security Group for AWS Provider\n\n\n$ umbreo provider:amazon_web_service security_groups --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:amazon_web_service security_groups --id 'AWS Foo Provider'\n\n\n\n\nGet Compute Params JSON file\n\n\n$ umbreo provider:amazon_web_service export --id |id_or_name_provider|\n\n\n\n\n$ umbreo provider:amazon_web_service export --id 'AWS Foo Provider'\n\n\n\n\nCheck valid Compute Params JSON file\n\n\n$ umbreo provider:amazon_web_service valid --file |directory_of_json_file|\n\n\n\n\n$ umbreo provider:amazon_web_service valid --file amazon_web_service_compute_params.json\n\n\n\n\n\n\n12. Service Provider\n\n\nList or filter\n\n\ncommand-suite\n\n\n$ umbreo service_provider list --type |all|logging|monitoring|backup| --resource |all|master|client| --page |number_of_page|\n\n\n\n\n$ umbreo service_provider list --type all --resource all\n\n\n\n\ncommand-form\n\n\n$ umbreo service_provider list\n\n1. all\n2. logging\n3. monitoring\n4. backup\n$ Please choose filter of service provider type? all\n\n1. all\n2. master\n3. client\n$ Please choose filter of resource? all\n\n\n\n\nSearch\n\n\ncommand-suite\n\n\n$ umbreo service_provider search --keyword |search_keyword| --type |all|logging|monitoring|backup| --resource |all|master|client| --page |number_of_page|\n\n\n\n\n$ umbreo service_provider search --keyword bacula --type all --resource all\n\n\n\n\ncommand-form\n\n\n$ umbreo service_provider search\n\n1. all\n2. logging\n3. monitoring\n4. backup\n$ Please choose filter of service provider type? all\n\n1. all\n2. master\n3. client\n$ Please choose filter of resource? all\n\n$ Search Keyword: bacula\n\n\n\n\nShow detail\n\n\ncommand-suite\n\n\n$ umbreo service_provider show --id |id_or_name|\n\n\n\n\n$ umbreo service_provider show --id baculaserver\n\n\n\n\ncommand-form\n\n\n$ umbreo cloud_provider show\n$ Name or ID of Service Provider: baculaserver\n\n\n\n\nExport service provider json\n\n\ncommand-suite\n\n\n$ umbreo service_provider export --id |id_or_name|\n\n\n\n\n$ umbreo service_provider export --id baculaserver\n\n\n\n\ncommand-form\n\n\n$ umbreo cloud_provider export\n$ Name or ID of Service provider: baculaserver\n\n\n\n\nValidate service provider json\n\n\ncommand-suite\n\n\n$ umbreo service_provider valid --file |directory_of_json_file|\n\n\n\n\n$ umbreo service_provider valid --file baculaserver.json\n\n\n\n\ncommand-form\n\n\n$ umbreo service_provider validate\n$ Directory of Service Provider: baculaserver.json\n\n\n\n\noutput\n\n\nValidate passed. You can deploy now\n\n\n\n\n\n\n13. Service\n\n\nAll command that\ns associated to Service\n\n\nList or filter\n\n\ncommand-suite\n\n\n$ umbreo service list --state |all|active|nonactive| --type |optional_id_or_slug_service_provider| --page |number_of_page|\n\n\n\n\n$ umbreo service list --state all --type baculaserver\n\n\n\n\ncommand-form\n\n\n$ umbreo service list\n\n1. all\n2. active\n3. unactive\n$ Please choose filter of state service? all\n\n$ ID or Slug of Service provider: baculaserver\n\n\n\n\nSearch\n\n\ncommand-suite\n\n\n$ umbreo service search --keyword |search_keyword| --state |all|active|nonactive| --type |optional_id_or_slug_service_provider| --page |number_of_page|\n\n\n\n\n$ umbreo service search --keyword 'BaculaExternal' --state all --type baculaserver\n\n\n\n\ncommand-form\n\n\n$ umbreo service search\n\n1. all\n2. active\n3. unactive\n$ Please choose filter of state service? 1\n\n$ ID or Slug of Service provider: baculaserver\n\n$ Search keyword: BaculaExternal\n\n\n\n\nShow detail\n\n\ncommand-suite\n\n\n$ umbreo service show --id |id_or_name|\n\n\n\n\n$ umbreo service show --id 'BaculaExternal'\n\n\n\n\ncommand-form\n\n\n$ umbreo service show\n$ Name or ID of Service: BaculaExternal\n\n\n\n\noutput\n\n\nID: 1\nName: BaculaExternal\nService Provider: baculaserver\nLink type: external\nActive: Yes\nDescription: My first Bacula\n\n\n\n\nCreate Service\n\n\ncommand\n\n\n$ umbreo service create --external |optional_to_choose_external| --file |directory_of_json_file| --id |service_template_id_or_slug| --name |name_of_service| --desc |description_for_service|\n\n\n\n\n$ umbreo service create --external --file baculaclient.json --id bacula --name 'Foo Service' --desc 'My first foo service'\n\n\n\n\nExport service json\n\n\ncommand-suite\n\n\n$ umbreo service export --id |id_or_name|\n\n\n\n\n$ umbreo service export --id 'BaculaExternal'\n\n\n\n\ncommand-form\n\n\n$ umbreo service export\n$ Name or ID of Service: BaculaExternal\n\n\n\n\nValidate service json\n\n\ncommand-suite\n\n\n$ umbreo service valid --file |directory_of_json_file|\n\n\n\n\n$ umbreo service valid --file baculaexternal.json\n\n\n\n\ncommand-form\n\n\n$ umbreo service validate\n$ Directory of Service Provider: baculaexternal.json\n\n\n\n\noutput\n\n\nValidate passed. You can deploy now\n\n\n\n\nHelp Command To Get Started\n\n\nFor some reason you might be confuse to get started with CLI, you can simply run this command to get help\n\n\numbreo help", 
            "title": "Umbreo CLI"
        }, 
        {
            "location": "/developers/cli/#list-umbreo-command-cli", 
            "text": "", 
            "title": "List Umbreo Command CLI"
        }, 
        {
            "location": "/developers/cli/#we-have-2-ways-to-call-action-command", 
            "text": "command-suite  command-form", 
            "title": "We have 2 ways to call action command:"
        }, 
        {
            "location": "/developers/cli/#wiki-umbreo-command-cli", 
            "text": "Endpoint Configuration  Authentication  Login  Logout    Instance  List or filter  Search  Show detail  Deploy Blueprint    Module  List  Search    Profile  List  Search    System  List    Blueprint  List or filter  Search  Show detail  Delete my custom blueprint  Create custom blueprint  Deploy blueprint  Export blueprint json  Validate blueprint json    Stack Template  List or filter  Search  Show detail  Export stack template json  Export blueprints of stack template json    Stack  List  Search  Show detail  Create stack    Cloud Provider  List  Export cloud provider json  Validate cloud provider json    Provider  List or filter  Search  Show detail  Create provider  Get Data Credential    Service Provider  List or filter  Search  Show detail  Export service provider json  Validate service provider json    Service  List or filter  Search  Show detail  Create Service  Export service json  Validate service json", 
            "title": "Wiki Umbreo Command CLI"
        }, 
        {
            "location": "/developers/cli/#getting-started", 
            "text": "This guide will help you to setup and run CLI", 
            "title": "Getting Started"
        }, 
        {
            "location": "/developers/cli/#step1-install-bundler", 
            "text": "$ gem install bundler", 
            "title": "Step1: install bundler"
        }, 
        {
            "location": "/developers/cli/#step2-run-bundle-install", 
            "text": "$ bundle install", 
            "title": "Step2: Run bundle install"
        }, 
        {
            "location": "/developers/cli/#how-to-run-cli", 
            "text": "You can simply go run this command", 
            "title": "How to Run CLI"
        }, 
        {
            "location": "/developers/cli/#for-first-time", 
            "text": "$ bundle exec bin/umbreo [command] [arg]", 
            "title": "For first time"
        }, 
        {
            "location": "/developers/cli/#for-secondtime", 
            "text": "$ umbreo [command] [arg]", 
            "title": "For secondtime"
        }, 
        {
            "location": "/developers/cli/#below-are-current-lists-command-on-cli", 
            "text": "", 
            "title": "Below are current lists command on CLI"
        }, 
        {
            "location": "/developers/cli/#1-endpoint-configuration", 
            "text": "We can switch host endpoint for development mode", 
            "title": "1. Endpoint Configuration"
        }, 
        {
            "location": "/developers/cli/#command-suite", 
            "text": "$ umbreo endpoint configure --url endpoint_url  $ umbreo endpoint configure --url https://beta.umbreo.com", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form", 
            "text": "$ umbreo endpoint configure\n$ Enter your Endpoint (URL): https://beta.umbreo.com", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#2-authentication", 
            "text": "", 
            "title": "2. Authentication"
        }, 
        {
            "location": "/developers/cli/#login", 
            "text": "File Credential will be created on ~/.umbreoconfig file", 
            "title": "Login"
        }, 
        {
            "location": "/developers/cli/#command-suite_1", 
            "text": "$ umbreo login --email your_email --password your_password  $ umbreo login --email foo@umbreo.com --password foobar", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_1", 
            "text": "$ umbreo endpoint login\n\nEnter your Umbreo credentials.\n$ Email: foobar@umbreo.com \n$ Password (Typing will be hidden):", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#logout", 
            "text": "$ umbreo logout\nLocal credentials cleared.", 
            "title": "Logout"
        }, 
        {
            "location": "/developers/cli/#3-instance", 
            "text": "", 
            "title": "3. Instance"
        }, 
        {
            "location": "/developers/cli/#list-or-filter", 
            "text": "", 
            "title": "List or filter"
        }, 
        {
            "location": "/developers/cli/#command-suite_2", 
            "text": "$ umbreo instance list --register_type |all|registered|unregistered| --type |all|test|manual|provider| --cloud |aws|gcompute|docean|openstack|XenServer| --page |number_of_page|  $ umbreo instance list --register_type all --type test --cloud aws --page 2", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_2", 
            "text": "$ umbreo instance list\n\n1. all\n2. registered\n3. unregistered\n$ Please choose filter of register type? all\n\n1. all\n2. test\n3. manual\n4. provider\n$ Please choose filter of instance deployment type? test", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#search", 
            "text": "", 
            "title": "Search"
        }, 
        {
            "location": "/developers/cli/#command-suite_3", 
            "text": "$ umbreo instance search --keyword |search_keyword| --register_type |all|registered|unregistered| --type |all|test|manual|provider| --cloud |aws|gcompute|docean|openstack|XenServer| --page |number_of_page|  $ umbreo instance search --keyword 'Foo Instance' --register_type all --type test --cloud aws", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_3", 
            "text": "$ umbreo instance search\n\n1. all\n2. registered\n3. unregistered\n$ Please choose filter of register type? all\n\n1. all\n2. test\n3. manual\n4. provider\n$ Please choose filter of instance deployment type? test\n\n$ Search keyword: Foo Instance", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#show-detail", 
            "text": "", 
            "title": "Show detail"
        }, 
        {
            "location": "/developers/cli/#command-suite_4", 
            "text": "$ umbreo instance show --id |id_or_name|  $ umbreo instance show --id 'foo instance'", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_4", 
            "text": "$ umbreo instance show\n$ Name or ID of Instance: foo instance", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#deploy-blueprint", 
            "text": "", 
            "title": "Deploy Blueprint"
        }, 
        {
            "location": "/developers/cli/#command-suite_5", 
            "text": "$ umbreo instance deploy --custom |optional_to_get_custom_or_umbreo_blueprints| --name |name_of_instance| --desc |desc_of_instance| --blueprint |directory_blueprint_json_file| --service_logging |directory_my_service_logging_json_file| --service_monitoring |directory_service_monitoring_json_file| --service_backup |directory_service_backup_json_file| --type |test|manual|provider| --provider |directory_my_provider_json_file|  $ umbreo instance deploy --name 'Foo Instance' --desc 'My first instance' --type provider --blueprint apache_webserver_with_php.json --provider digital_ocean_provider.json --service_backup baculaexternal.json", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_5", 
            "text": "$ umbreo instance deploy --custom\n\n$ Name of new instance: Foo Instance\n$ Description of new instance: My First instance\n$ Blueprint directory File JSON: custom_apache_webserver_with_php.json\n$ Service logging directory File JSON (optional): \n$ Service monitoring directory File JSON (optional): \n$ Service backup directory File JSON (optional): \n\n1. test\n2. manual\n3. provider\n$ Please choose deployment type? 1", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#4-module", 
            "text": "All command that s associated to Module", 
            "title": "4. Module"
        }, 
        {
            "location": "/developers/cli/#list", 
            "text": "", 
            "title": "List"
        }, 
        {
            "location": "/developers/cli/#command-suite_6", 
            "text": "$ umbreo module list --page |number_of_page|  $ umbreo module list", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#search_1", 
            "text": "", 
            "title": "Search"
        }, 
        {
            "location": "/developers/cli/#command-suite_7", 
            "text": "$ umbreo module search --keyword |search_keyword| --page |number_of_page|  $ umbreo module search --keyword php", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#5-profile", 
            "text": "All command that s associated to Profile", 
            "title": "5. Profile"
        }, 
        {
            "location": "/developers/cli/#list_1", 
            "text": "", 
            "title": "List"
        }, 
        {
            "location": "/developers/cli/#command-suite_8", 
            "text": "$ umbreo profile list --page |number_of_page|  $ umbreo profile list", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#search_2", 
            "text": "", 
            "title": "Search"
        }, 
        {
            "location": "/developers/cli/#command-suite_9", 
            "text": "$ umbreo profile search --keyword |search_keyword| --page |number_of_page|  $ umbreo profile search --keyword rails", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#6-system", 
            "text": "", 
            "title": "6. System"
        }, 
        {
            "location": "/developers/cli/#list_2", 
            "text": "", 
            "title": "List"
        }, 
        {
            "location": "/developers/cli/#command-suite_10", 
            "text": "$ umbreo system list", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#7-blueprint", 
            "text": "All command that s associated to Blueprint", 
            "title": "7. Blueprint"
        }, 
        {
            "location": "/developers/cli/#list-or-filter_1", 
            "text": "", 
            "title": "List or filter"
        }, 
        {
            "location": "/developers/cli/#command-suite_11", 
            "text": "$ umbreo blueprint list --custom |optional_to_get_custom_or_umbreo_blueprints| --os |all|linux|windows| --page |number_of_page|  $ umbreo blueprint list --os all", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_6", 
            "text": "$ umbreo blueprint list\n\n1. all\n2. linux\n3. windows\n$ Please choose filter of instance provider? all", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#search_3", 
            "text": "", 
            "title": "Search"
        }, 
        {
            "location": "/developers/cli/#command-suite_12", 
            "text": "$ umbreo blueprint search --keyword |search_keyword| --custom |optional_to_get_custom_or_umbreo_blueprints| --os |all|linux|windows| --page |number_of_page|  $ umbreo blueprint search --keyword 'lamp server' --os all", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_7", 
            "text": "$ umbreo blueprint search\n\n1. all\n2. linux\n3. windows\n$ Please choose filter of instance provider? all\n\n$ Search keyword: lamp server", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#show-detail_1", 
            "text": "", 
            "title": "Show detail"
        }, 
        {
            "location": "/developers/cli/#command-suite_13", 
            "text": "$ umbreo blueprint show --id |id_or_slug| --custom |optional_to_get_custom_or_umbreo_blueprints|  $ umbreo blueprint show --id lamp-server", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_8", 
            "text": "$ umbreo blueprint show\n$ ID or Slug of blueprint: lamp-server", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#output", 
            "text": "ID: 3\nName: LAMP Server\nDescription: \nOS: linux", 
            "title": "output"
        }, 
        {
            "location": "/developers/cli/#delete-my-custom-blueprint", 
            "text": "Delete bluprient can bse used if a custom blueprint didn t have instance.", 
            "title": "Delete my custom blueprint"
        }, 
        {
            "location": "/developers/cli/#command-suite_14", 
            "text": "$ umbreo delete --id |id_or_slug|  $ umbreo delete --id foo-blueprint", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_9", 
            "text": "$ umbreo blueprint delete\nId or Slug Custom Blueprint: foo-blueprint", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#create-custom-blueprint", 
            "text": "", 
            "title": "Create custom blueprint"
        }, 
        {
            "location": "/developers/cli/#command-suite_15", 
            "text": "$ umbreo blueprint create --name |name_blueprint| --operating_system |linux|windows| --system |name_ofsystem| --profile |profiles|  $ umbreo blueprint create --name 'foo blueprint' --operating_system linux --system 'Ubuntu 12.04' --profile 'Ruby, Postgresql'", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_10", 
            "text": "$ umbreo blueprint create\n\n$ Name of blueprint: Foo Blueprint\n\n1. linux\n2. windows\n$ Please choose your blueprint operating system? linux\n\n$ Description: My first blueprint\n\n1. Ubuntu\n2. CentOS\n3. Fedora\n4. Ubuntu 12.04\n5. Ubuntu 14.04\n6. CentOS 5\n7. CentOS 6\n8. CentOS 7\n9. Fedora 19\n10. Fedora 20\n11. Ubuntu 10.04\n12. Windows\n$ Please choose your blueprint system? Ubuntu 10.04\n\n$ Add profiles (call list_profiles to show profiles) eg: 'Ruby, Postgresql': Ruby, Postgresql", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#deploy-blueprint_1", 
            "text": "", 
            "title": "Deploy blueprint"
        }, 
        {
            "location": "/developers/cli/#export-blueprint-json", 
            "text": "", 
            "title": "Export blueprint json"
        }, 
        {
            "location": "/developers/cli/#command-suite_16", 
            "text": "$ umbreo blueprint export --custom |optional_to_get_custom_or_umbreo_blueprints| --id |id_or_name_of_blueprint|  $ umbreo blueprint export --custom --id 'foo-blueprint'", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_11", 
            "text": "$ umbreo blueprint export --custom\nID or Slug of Blueprint: foo-blueprint", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#validate-blueprint-json", 
            "text": "", 
            "title": "Validate blueprint json"
        }, 
        {
            "location": "/developers/cli/#command-suite_17", 
            "text": "$ umbreo blueprint valid --file |directory_of_json_file|  $ umbreo blueprint valid --file foo_blueprint.json", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_12", 
            "text": "$ umbreo blueprint validate\n$ Directory of Blueprint: foo_blueprint.json", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#8-stack-template", 
            "text": "All command that s associated to Stack Template", 
            "title": "8. Stack Template"
        }, 
        {
            "location": "/developers/cli/#list-or-filter_2", 
            "text": "", 
            "title": "List or filter"
        }, 
        {
            "location": "/developers/cli/#command-suite_18", 
            "text": "$ umbreo stack_template list", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#search_4", 
            "text": "", 
            "title": "Search"
        }, 
        {
            "location": "/developers/cli/#command-suite_19", 
            "text": "$ umbreo stack_template search --keyword |search_keyword|  $ umbreo stack_template search --keyword php", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_13", 
            "text": "$ umbreo stack_template search\n$ Keyword of Stack Template: php", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#show-detail_2", 
            "text": "", 
            "title": "Show detail"
        }, 
        {
            "location": "/developers/cli/#command-suite_20", 
            "text": "$ umbreo stack_template show --id |id_or_name|  $ umbreo stack_template show --id 'Load Balanced Lamp Server'", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_14", 
            "text": "$ umbreo stack_template show\n$ Name or id of Stack Template: Load Balanced Lamp Server", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#export-stack-template-json", 
            "text": "", 
            "title": "Export stack template json"
        }, 
        {
            "location": "/developers/cli/#command-suite_21", 
            "text": "$ umbreo stack_template export --id |id_or_name_of_blueprint|  $ umbreo stack_template export --id 'Load Balanced Lamp Server'", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_15", 
            "text": "$ umbreo stack_template export\nName or ID of Stack Template: Load Balanced Lamp Server", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#export-blueprints-of-stack-template-json", 
            "text": "", 
            "title": "Export blueprints of stack template json"
        }, 
        {
            "location": "/developers/cli/#command-suite_22", 
            "text": "$ umbreo stack_template blueprint_export --id |id_or_name_of_blueprint|  $ umbreo stack_template blueprint_export --id 'Load Balanced Lamp Server'", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_16", 
            "text": "$ umbreo stack_template blueprint_export\nName or ID of Stack Template: Load Balanced Lamp Server", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#9-stack", 
            "text": "All command that s associated to Stack", 
            "title": "9. Stack"
        }, 
        {
            "location": "/developers/cli/#list_3", 
            "text": "", 
            "title": "List"
        }, 
        {
            "location": "/developers/cli/#command-suite_23", 
            "text": "$ umbreo stack list", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#search_5", 
            "text": "", 
            "title": "Search"
        }, 
        {
            "location": "/developers/cli/#command-suite_24", 
            "text": "$ umbreo stack search --keyword |search_keyword|  $ umbreo stack search --keyword 'Stack One'", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_17", 
            "text": "$ umbreo stack search\n$ Keyword of Stack: one", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#show-detail_3", 
            "text": "", 
            "title": "Show detail"
        }, 
        {
            "location": "/developers/cli/#command-suite_25", 
            "text": "$ umbreo stack show --id |id_or_name_stack|  $ umbreo stack show --id 'Foo Stack'", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_18", 
            "text": "$ umbreo stack show\n$ Name or ID of Stack: Foo Stack", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#create-stack", 
            "text": "$ umbreo stack create --id |id_or_name_stack_template| --name |name_of_stack| --desc |desc_of_stack|  $ umbreo stack create --id 1 --name 'Foo Stack' --desc 'My first Foo Stack'\n\n1. yes\n2. no\n$ Will you add Nginx Webserver? yes\n$ Description of new instance: My first node stack\n$ Blueprint directory File JSON: /Users/foo/Documents/json/nginx_webserver.json\n$ Service logging directory File JSON (optional): \n$ Service monitoring directory File JSON (optional): \n$ Service backup directory File JSON (optional): \n\n1. test\n2. manual\n3. provider\n$ Please choose deployment type? 3\n$ Compute provider directory File JSON: /Users/foo/Documents/json/digital_ocean_provider.json", 
            "title": "Create stack"
        }, 
        {
            "location": "/developers/cli/#10-cloud-provider", 
            "text": "All command that s associated to Stack", 
            "title": "10. Cloud Provider"
        }, 
        {
            "location": "/developers/cli/#list_4", 
            "text": "", 
            "title": "List"
        }, 
        {
            "location": "/developers/cli/#command-suite_26", 
            "text": "$ umbreo cloud_provider list", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#export-cloud-provider-json", 
            "text": "", 
            "title": "Export cloud provider json"
        }, 
        {
            "location": "/developers/cli/#command-suite_27", 
            "text": "$ umbreo cloud_provider export --id |id_or_slug_of_cloud_provider|  $ umbreo cloud_provider export --id aws", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_19", 
            "text": "$ umbreo cloud_provider export\n$ ID or Slug of Cloud Provider: aws", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#validate-cloud-provider-json", 
            "text": "", 
            "title": "Validate cloud provider json"
        }, 
        {
            "location": "/developers/cli/#command-suite_28", 
            "text": "$ umbreo cloud_provider valid --file |directory_of_json_file|  $ umbreo cloud_provider valid --file amazon_web_services(aws).json", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_20", 
            "text": "$ umbreo blueprint validate\n$ Directory File JSON: amazon_web_services(aws).json", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#11-provider", 
            "text": "", 
            "title": "11. Provider"
        }, 
        {
            "location": "/developers/cli/#list-or-filter_3", 
            "text": "", 
            "title": "List or filter"
        }, 
        {
            "location": "/developers/cli/#command-suite_29", 
            "text": "$ umbreo provider list --cloud |slug_cloud_provider| --page |number_of_page|  $ umbreo provider list --cloud all --page 2", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_21", 
            "text": "$ umbreo provider list --page 2\n\n1. all\n2. aws\n3. gcompute\n4. docean\n5. openstack\n6. XenServer\n$ Please choose Cloud Provider filter? all", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#search_6", 
            "text": "", 
            "title": "Search"
        }, 
        {
            "location": "/developers/cli/#command-suite_30", 
            "text": "$ umbreo provider search --cloud |slug_cloud_provider| --keyword |search_keyword| --page |number_of_page|  $ umbreo provider search --cloud docean --keyword foo", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_22", 
            "text": "$ umbreo provider search\n\n1. all\n2. aws\n3. gcompute\n4. docean\n5. openstack\n6. XenServer\n$ Please choose Cloud Provider filter? docean\n\n$ Search keyword: FooPro1", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#show-detail_4", 
            "text": "", 
            "title": "Show detail"
        }, 
        {
            "location": "/developers/cli/#command-suite_31", 
            "text": "$ umbreo provider show --id |id_or_name|  $ umbreo provider show --id 'FooPro1'", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_23", 
            "text": "$ umbreo provider show\n$ Name or ID of Provider: FooPro1", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#create-provider", 
            "text": "For create provider, we have to export cloud provider json first", 
            "title": "Create provider"
        }, 
        {
            "location": "/developers/cli/#command-suite_32", 
            "text": "$ umbreo provider:create |aws|gcompute|docean|openstack|xenserver| --file |directory_of_json_file| --name |provider_name| --desc |provider_description|   $ umbreo provider:create digital_ocean --file digital_ocean.json --name 'Foo Instance'", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_24", 
            "text": "$ umbreo cloud_provider:create digital_ocean \n$ Provider Name: Foo Instance\n$ Description (optional): test\n$ Directory of File: digital_ocean.json", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#get-data-credential", 
            "text": "For create instance, we need data credential from if we choose provider as deployment type", 
            "title": "Get Data Credential"
        }, 
        {
            "location": "/developers/cli/#digital-ocean", 
            "text": "Get Images for Digital Ocean Provider  $ umbreo provider:digital_ocean images --id |id_or_name_provider|  $ umbreo provider:digital_ocean images --id 'Foo Provider'  Get Flavors for Digital Ocean Provider  $ umbreo provider:digital_ocean flavors --id |id_or_name_provider| --image |id_image_digital_ocean_provider|  $ umbreo provider:digital_ocean flavors --id 'Foo Provider' --image 18830380  Get Regions for Digital Ocean Provider  $ umbreo provider:digital_ocean regions --id |id_or_name_provider| --image |id_image_digital_ocean_provider|  $ umbreo provider:digital_ocean regions --id 'Foo Provider' --image 18830380  Get Compute Params JSON file  $ umbreo provider:digital_ocean export --id |id_or_name_provider|  $ umbreo provider:digital_ocean export --id 'Foo Provider'  Check valid Compute Params JSON file  $ umbreo provider:digital_ocean valid --file |directory_of_json_file|  $ umbreo provider:digital_ocean valid --file digital_ocean_compute_params.json", 
            "title": "Digital Ocean"
        }, 
        {
            "location": "/developers/cli/#openstack", 
            "text": "Get Zone for Openstack  $ umbreo provider:openstack zones --id |id_or_name_provider|  $ umbreo provider:openstack zones --id 'Openstack Foo Provider'  Get Flavor for Openstack  $ umbreo provider:openstack flavors --id |id_or_name_provider|  $ umbreo provider:openstack flavors --id 'Openstack Foo Provider'  Get Image for Openstack  $ umbreo provider:openstack images --id |id_or_name_provider|  $ umbreo provider:openstack images --id 'Openstack Foo Provider'  Get Group for Openstack  $ umbreo provider:openstack groups --id |id_or_name_provider|  $ umbreo provider:openstack groups --id 'Openstack Foo Provider'  Get Keypair for Openstack  $ umbreo provider:openstack keypairs --id |id_or_name_provider|  $ umbreo provider:openstack keypairs --id 'Openstack Foo Provider'  Get Export for Openstack  $ umbreo provider:openstack export --id |id_or_name_provider|  $ umbreo provider:openstack export --id 'Openstack Foo Provider'  Get Validate for Openstack  $ umbreo provider:openstack valid --file |directory_of_json_file|  $ umbreo provider:openstack valid --file openstack_provider.json", 
            "title": "Openstack"
        }, 
        {
            "location": "/developers/cli/#google-cloud-engine", 
            "text": "Get Image for Google Compute Engine  $ umbreo provider:google_ce images --id |id_or_name_provider|  $ umbreo provider:google_ce images --id 'GCE Foo Provider'  Get Region for Google Compute Engine  $ umbreo provider:google_ce regions --id |id_or_name_provider|  $ umbreo provider:google_ce regions --id 'GCE Foo Provider'  Get Machine for Google Compute Engine  $ umbreo provider:google_ce machines --id |id_or_name_provider|  $ umbreo provider:google_ce machines --id 'GCE Foo Provider'  Get Network for Google Compute Engine  $ umbreo provider:google_ce networks --id |id_or_name_provider|  $ umbreo provider:google_ce networks --id 'GCE Foo Provider'  Get Export for Google Compute Engine  $ umbreo provider:google_ce export --id |id_or_name_provider|  $ umbreo provider:google_ce export --id 'GCE Foo Provider'  Get Validate for Google Compute Engine  $ umbreo provider:google_ce valid --file |directory_of_json_file|  $ umbreo provider:google_ce valid --file google_compute_engine_service_provider.json", 
            "title": "Google Cloud Engine"
        }, 
        {
            "location": "/developers/cli/#amazon-web-service", 
            "text": "Get Images for AWS Provider  $ umbreo provider:amazon_web_service images --id |id_or_name_provider|  $ umbreo provider:amazon_web_service images --id 'AWS Foo Provider'  Get Size Storage for AWS Provider  $ umbreo provider:amazon_web_service sizes --id |id_or_name_provider|  $ umbreo provider:amazon_web_service sizes --id 'AWS Foo Provider'  Get Region for AWS Provider  $ umbreo provider:amazon_web_service regions --id |id_or_name_provider|  $ umbreo provider:amazon_web_service regions --id 'AWS Foo Provider'  Get Keypair for AWS Provider  $ umbreo provider:amazon_web_service keypairs --id |id_or_name_provider|  $ umbreo provider:amazon_web_service keypairs --id 'AWS Foo Provider'  Get Security Group for AWS Provider  $ umbreo provider:amazon_web_service security_groups --id |id_or_name_provider|  $ umbreo provider:amazon_web_service security_groups --id 'AWS Foo Provider'  Get Compute Params JSON file  $ umbreo provider:amazon_web_service export --id |id_or_name_provider|  $ umbreo provider:amazon_web_service export --id 'AWS Foo Provider'  Check valid Compute Params JSON file  $ umbreo provider:amazon_web_service valid --file |directory_of_json_file|  $ umbreo provider:amazon_web_service valid --file amazon_web_service_compute_params.json", 
            "title": "Amazon Web Service"
        }, 
        {
            "location": "/developers/cli/#12-service-provider", 
            "text": "", 
            "title": "12. Service Provider"
        }, 
        {
            "location": "/developers/cli/#list-or-filter_4", 
            "text": "", 
            "title": "List or filter"
        }, 
        {
            "location": "/developers/cli/#command-suite_33", 
            "text": "$ umbreo service_provider list --type |all|logging|monitoring|backup| --resource |all|master|client| --page |number_of_page|  $ umbreo service_provider list --type all --resource all", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_25", 
            "text": "$ umbreo service_provider list\n\n1. all\n2. logging\n3. monitoring\n4. backup\n$ Please choose filter of service provider type? all\n\n1. all\n2. master\n3. client\n$ Please choose filter of resource? all", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#search_7", 
            "text": "", 
            "title": "Search"
        }, 
        {
            "location": "/developers/cli/#command-suite_34", 
            "text": "$ umbreo service_provider search --keyword |search_keyword| --type |all|logging|monitoring|backup| --resource |all|master|client| --page |number_of_page|  $ umbreo service_provider search --keyword bacula --type all --resource all", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_26", 
            "text": "$ umbreo service_provider search\n\n1. all\n2. logging\n3. monitoring\n4. backup\n$ Please choose filter of service provider type? all\n\n1. all\n2. master\n3. client\n$ Please choose filter of resource? all\n\n$ Search Keyword: bacula", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#show-detail_5", 
            "text": "", 
            "title": "Show detail"
        }, 
        {
            "location": "/developers/cli/#command-suite_35", 
            "text": "$ umbreo service_provider show --id |id_or_name|  $ umbreo service_provider show --id baculaserver", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_27", 
            "text": "$ umbreo cloud_provider show\n$ Name or ID of Service Provider: baculaserver", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#export-service-provider-json", 
            "text": "", 
            "title": "Export service provider json"
        }, 
        {
            "location": "/developers/cli/#command-suite_36", 
            "text": "$ umbreo service_provider export --id |id_or_name|  $ umbreo service_provider export --id baculaserver", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_28", 
            "text": "$ umbreo cloud_provider export\n$ Name or ID of Service provider: baculaserver", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#validate-service-provider-json", 
            "text": "", 
            "title": "Validate service provider json"
        }, 
        {
            "location": "/developers/cli/#command-suite_37", 
            "text": "$ umbreo service_provider valid --file |directory_of_json_file|  $ umbreo service_provider valid --file baculaserver.json", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_29", 
            "text": "$ umbreo service_provider validate\n$ Directory of Service Provider: baculaserver.json", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#output_1", 
            "text": "Validate passed. You can deploy now", 
            "title": "output"
        }, 
        {
            "location": "/developers/cli/#13-service", 
            "text": "All command that s associated to Service", 
            "title": "13. Service"
        }, 
        {
            "location": "/developers/cli/#list-or-filter_5", 
            "text": "", 
            "title": "List or filter"
        }, 
        {
            "location": "/developers/cli/#command-suite_38", 
            "text": "$ umbreo service list --state |all|active|nonactive| --type |optional_id_or_slug_service_provider| --page |number_of_page|  $ umbreo service list --state all --type baculaserver", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_30", 
            "text": "$ umbreo service list\n\n1. all\n2. active\n3. unactive\n$ Please choose filter of state service? all\n\n$ ID or Slug of Service provider: baculaserver", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#search_8", 
            "text": "", 
            "title": "Search"
        }, 
        {
            "location": "/developers/cli/#command-suite_39", 
            "text": "$ umbreo service search --keyword |search_keyword| --state |all|active|nonactive| --type |optional_id_or_slug_service_provider| --page |number_of_page|  $ umbreo service search --keyword 'BaculaExternal' --state all --type baculaserver", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_31", 
            "text": "$ umbreo service search\n\n1. all\n2. active\n3. unactive\n$ Please choose filter of state service? 1\n\n$ ID or Slug of Service provider: baculaserver\n\n$ Search keyword: BaculaExternal", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#show-detail_6", 
            "text": "", 
            "title": "Show detail"
        }, 
        {
            "location": "/developers/cli/#command-suite_40", 
            "text": "$ umbreo service show --id |id_or_name|  $ umbreo service show --id 'BaculaExternal'", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_32", 
            "text": "$ umbreo service show\n$ Name or ID of Service: BaculaExternal", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#output_2", 
            "text": "ID: 1\nName: BaculaExternal\nService Provider: baculaserver\nLink type: external\nActive: Yes\nDescription: My first Bacula", 
            "title": "output"
        }, 
        {
            "location": "/developers/cli/#create-service", 
            "text": "", 
            "title": "Create Service"
        }, 
        {
            "location": "/developers/cli/#command", 
            "text": "$ umbreo service create --external |optional_to_choose_external| --file |directory_of_json_file| --id |service_template_id_or_slug| --name |name_of_service| --desc |description_for_service|  $ umbreo service create --external --file baculaclient.json --id bacula --name 'Foo Service' --desc 'My first foo service'", 
            "title": "command"
        }, 
        {
            "location": "/developers/cli/#export-service-json", 
            "text": "", 
            "title": "Export service json"
        }, 
        {
            "location": "/developers/cli/#command-suite_41", 
            "text": "$ umbreo service export --id |id_or_name|  $ umbreo service export --id 'BaculaExternal'", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_33", 
            "text": "$ umbreo service export\n$ Name or ID of Service: BaculaExternal", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#validate-service-json", 
            "text": "", 
            "title": "Validate service json"
        }, 
        {
            "location": "/developers/cli/#command-suite_42", 
            "text": "$ umbreo service valid --file |directory_of_json_file|  $ umbreo service valid --file baculaexternal.json", 
            "title": "command-suite"
        }, 
        {
            "location": "/developers/cli/#command-form_34", 
            "text": "$ umbreo service validate\n$ Directory of Service Provider: baculaexternal.json", 
            "title": "command-form"
        }, 
        {
            "location": "/developers/cli/#output_3", 
            "text": "Validate passed. You can deploy now", 
            "title": "output"
        }, 
        {
            "location": "/developers/cli/#help-command-to-get-started", 
            "text": "", 
            "title": "Help Command To Get Started"
        }, 
        {
            "location": "/developers/cli/#for-some-reason-you-might-be-confuse-to-get-started-with-cli-you-can-simply-run-this-command-to-get-help", 
            "text": "umbreo help", 
            "title": "For some reason you might be confuse to get started with CLI, you can simply run this command to get help"
        }, 
        {
            "location": "/developers/community-edition/", 
            "text": "Umbreo CE (Community Edition) is temporary unavailable, come back soon.", 
            "title": "Umbreo CE"
        }, 
        {
            "location": "/developers/endpoints/", 
            "text": "By default, when using Umbreo CLI, your Umbreo Endpoint is \nhttps://beta.umbreo.com\n. It means that all of your commands will interact with that Endpoint.\n\n\nIf you consider having \nUmbreo CE\n, you might need to point at your own edition of Umbreo. And because of that we are introducing a new feature in the Umbreo CLI to configure which Endpoint you want to point at.\n\n\n\n\nRequirements\n\n\nHaving the Umbreo CLI Gem installed. \nlearn more\n\n\n\n\nConfigure your Endpoint\n\n\nRun \numbreo endpoint configure\n\nEnter URL of your new Endpoint.\n\n\nIf you want to point at your own Endpoint, then you will need to have your Umbreo CE.\n\n\nRead more about Umbreo CE \nhere\n\n\n\n\nTroubleshooting\n\n\nMake sure that your Endpoint URL is accessible in network.", 
            "title": "Umbreo Endpoints"
        }, 
        {
            "location": "/developers/endpoints/#requirements", 
            "text": "Having the Umbreo CLI Gem installed.  learn more", 
            "title": "Requirements"
        }, 
        {
            "location": "/developers/endpoints/#configure-your-endpoint", 
            "text": "Run  umbreo endpoint configure \nEnter URL of your new Endpoint.  If you want to point at your own Endpoint, then you will need to have your Umbreo CE.  Read more about Umbreo CE  here", 
            "title": "Configure your Endpoint"
        }, 
        {
            "location": "/developers/endpoints/#troubleshooting", 
            "text": "Make sure that your Endpoint URL is accessible in network.", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/faq/", 
            "text": "What is Umbreo ?\n\n\nUmbreo reduces the configuration time from months to a few minutes and simplifies the process, so companies won\nt have to depend on highly skilled system admins. \n\n\nUmbreo\ns main offering is Configuration Management as a Service (CMaaS), which means it has all the benefits of a traditional Configuration Management, such as keeping your infrastructure consistent, controlling the IT-infrastructure from a central location, dynamic inventory of the IT-infrastructure etc.\n\n\nUmbreo is available in a cloud version and an on-premise version. Furthermore our cloud version can handle servers that are on-premise or in the cloud.\n\n\n\n\nWhat is Configuration management ?\n\n\nConfiguration management is the process of standardizing resource configurations and enforcing their state across IT infrastructure in an automated yet agile manner. Configuration management is critical to the success of other IT processes, including provisioning, change management, release management, patch management, compliance and security. \n\n\n\n\nWhat Operating Systems are currently supported ?\n\n\nCurrently we support the Debian, Ubuntu Linux distributions. It may work on other OSs, and additional operating systems will be supported pretty soon.\n\n\n\n\nWhat Cloud Providers are currently supported ?\n\n\nRead \nhere\n.\n\n\n\n\nHow do I give feedback or suggest new features?\n\n\nThe best way to share your ideas or show support for existing ones is by drop us an email at \ninfo@umbreo.com \n\n\nWe\u2019re always looking to improve Umbreo with suggestions from our users, so your feedback is important to us.", 
            "title": "Umbreo FAQ"
        }, 
        {
            "location": "/faq/#what-is-umbreo", 
            "text": "Umbreo reduces the configuration time from months to a few minutes and simplifies the process, so companies won t have to depend on highly skilled system admins.   Umbreo s main offering is Configuration Management as a Service (CMaaS), which means it has all the benefits of a traditional Configuration Management, such as keeping your infrastructure consistent, controlling the IT-infrastructure from a central location, dynamic inventory of the IT-infrastructure etc.  Umbreo is available in a cloud version and an on-premise version. Furthermore our cloud version can handle servers that are on-premise or in the cloud.", 
            "title": "What is Umbreo ?"
        }, 
        {
            "location": "/faq/#what-is-configuration-management", 
            "text": "Configuration management is the process of standardizing resource configurations and enforcing their state across IT infrastructure in an automated yet agile manner. Configuration management is critical to the success of other IT processes, including provisioning, change management, release management, patch management, compliance and security.", 
            "title": "What is Configuration management ?"
        }, 
        {
            "location": "/faq/#what-operating-systems-are-currently-supported", 
            "text": "Currently we support the Debian, Ubuntu Linux distributions. It may work on other OSs, and additional operating systems will be supported pretty soon.", 
            "title": "What Operating Systems are currently supported ?"
        }, 
        {
            "location": "/faq/#what-cloud-providers-are-currently-supported", 
            "text": "Read  here .", 
            "title": "What Cloud Providers are currently supported ?"
        }, 
        {
            "location": "/faq/#how-do-i-give-feedback-or-suggest-new-features", 
            "text": "The best way to share your ideas or show support for existing ones is by drop us an email at  info@umbreo.com   We\u2019re always looking to improve Umbreo with suggestions from our users, so your feedback is important to us.", 
            "title": "How do I give feedback or suggest new features?"
        }
    ]
}